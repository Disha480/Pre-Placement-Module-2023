class Solution {

	private static final String[] key = { "", "",    "abc", "def", 
                                              "ghi", "jkl", "mno", 
                                              "pqrs", "tuv", "wxyz" };

	public List<String> letterCombinations(String digits) {
		List<String> result = new ArrayList<String>();
        
        if(digits.equals("") == true) return result;
        
		combination("", digits, 0, result);
		return result;
	}

	private void combination(String prefix, String digits, int idx, List<String> result) {
		if (idx >= digits.length()) {
			result.add(prefix);
			return;
		}
		String letters = key[(digits.charAt(idx) - '0')];
		for (int i = 0; i < letters.length(); i++) {
            StringBuilder sb = new StringBuilder(prefix);
            sb.append(letters.charAt(i));
			combination(sb.toString(), digits, idx + 1, result);
		}
	}
}