class Solution {
    public int decoding(String s,int n,int [] dp){
        
        if(n==0)return 1;
        
        if(dp[n]!=-1)return dp[n];
        
        if(n==1)return decoding(s,n-1,dp);
        
    String str2=new StringBuilder().append(s.charAt(n-2)).append(s.charAt(n-1)).toString();
        
        if(s.charAt(n-1)=='0'){
            if(Integer.valueOf(str2)<26 && Integer.valueOf(str2)>0) return dp[n]= decoding(s,n-2,dp);
            
            else return dp[n]= 0;
        }
        
        if(Integer.valueOf(str2)>26|| str2.charAt(0)=='0') return dp[n]= decoding(s,n-1,dp);
        
        else return dp[n]= decoding(s,n-1,dp)+decoding(s,n-2,dp);
        
    }
    public int numDecodings(String s) {
        if(s.charAt(0)=='0')return 0;
        int[]dp= new int[s.length()+1];
        for(int i=0;i<dp.length;i++)dp[i]=-1;
        return decoding(s,s.length(),dp);
    }
}